<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>To-Do App</title>
  <style>
    body {
      margin: 0;
      font-family: sans-serif;
      background-color: #f0f2f5;
    }

    .container {
      display: flex;
      height: 100vh;
    }

    .left-pane, .right-pane {
      flex: 1;
      padding: 20px;
      box-sizing: border-box;
    }

    .left-pane {
      background-color: #fff;
      border-right: 1px solid #ccc;
      overflow-y: auto;
    }

    .right-pane {
      background-color: #e6f7ff;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    textarea {
      width: 80%;
      height: 100px;
      font-size: 18px;
      padding: 10px;
      resize: none;
    }

    .task-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background-color: #f9f9f9;
      margin-bottom: 10px;
      padding: 10px;
      border-radius: 5px;
    }

    .task-item.completed span {
      text-decoration: line-through;
      color: gray;
    }

    .task-item span {
      flex-grow: 1;
      margin-left: 10px;
    }

    .task-actions {
      display: flex;
      gap: 10px;
    }

    .task-actions button {
      background: none;
      border: none;
      font-size: 18px;
      cursor: pointer;
    }

    .task-actions .edit {
      color: #0078d4;
    }

    .task-actions .delete {
      color: red;
    }

    h2 {
      margin-top: 0;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="left-pane">
      <h2>TASK LIST</h2>
      <p>Add tasks to your list by typing to the right and pressing enter. You may then view pending tasks below.</p>
      <div id="task-list"></div>
    </div>
    <div class="right-pane">
      <textarea id="task-input" placeholder="I need to..."></textarea>
    </div>
  </div>

  <script>
    const taskList = document.getElementById('task-list');
    const taskInput = document.getElementById('task-input');

    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];

    function saveTasks() {
      localStorage.setItem('tasks', JSON.stringify(tasks));
    }

    function renderTasks() {
      taskList.innerHTML = '';
      tasks.forEach((task, index) => {
        const taskItem = document.createElement('div');
        taskItem.className = 'task-item' + (task.completed ? ' completed' : '');

        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.checked = task.completed;
        checkbox.addEventListener('change', () => {
          task.completed = checkbox.checked;
          saveTasks();
          renderTasks();
        });

        const label = document.createElement('span');
        label.textContent = task.name;

        const actions = document.createElement('div');
        actions.className = 'task-actions';

        const editBtn = document.createElement('button');
        editBtn.innerHTML = '✏️';
        editBtn.className = 'edit';
        editBtn.addEventListener('click', () => {
          const newName = prompt('Update task name:', task.name);
          if (newName !== null && newName.trim() !== '') {
            task.name = newName.trim();
            saveTasks();
            renderTasks();
          }
        });

        const deleteBtn = document.createElement('button');
        deleteBtn.innerHTML = '❌';
        deleteBtn.className = 'delete';
        deleteBtn.addEventListener('click', () => {
          tasks.splice(index, 1);
          saveTasks();
          renderTasks();
        });

        actions.appendChild(editBtn);
        actions.appendChild(deleteBtn);

        taskItem.appendChild(checkbox);
        taskItem.appendChild(label);
        taskItem.appendChild(actions);

        taskList.appendChild(taskItem);
      });
    }

    taskInput.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        const text = taskInput.value.trim();
        if (text !== '') {
          tasks.push({ name: text, completed: false });
          saveTasks();
          renderTasks();
          taskInput.value = '';
        }
      }
    });

    renderTasks();
  </script>
</body>
</html>
